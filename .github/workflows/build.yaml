name: Build and Release

on:
  push:
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: 'build-and-release'
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [nightly]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}

      - name: Get app version
        id: get_version
        uses: dante-signal31/rust-app-version@v1.2.0
        with:
          cargo_toml_folder: './'

      - name: Build
        run: cargo build --release

      - name: Create Release Text
        id: release-text
        run: |
          body="## Commits\n"
          body+=$(git log $(git describe --tags --always --abbrev=0)..HEAD --pretty=format:'\n- [`%h`](${{ github.server_url }}/${{ github.repository }}/commit/%H): %s (%an)') 
          echo -e $body >> release.md

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            target/release/gpt-commit-rust*
          tag_name: v${{ steps.get_version.outputs.app_version }}-${{ matrix.os }}
          body_path: release.md
